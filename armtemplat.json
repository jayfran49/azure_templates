{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.3",
    "parameters": {
        
        "sshPublicKeys_cc_key_name": {
            "defaultValue": "cc_key",
            "type": "String"
        },
        "loadBalancers_ccplbpip_name": {
            "defaultValue": "ccplbpip",
            "type": "String"
        },
        "publicIPAddresses_ccplbpip_publicip_externalid": {
            "defaultValue": "/subscriptions/aca56408-c68a-4b77-abbd-555b94db2609/resourceGroups/CGSTestRG/providers/Microsoft.Network/publicIPAddresses/ccplbpip-publicip",
            "type": "String"
        },
        "vaults_cgsrsv_name": {
            "defaultValue": "cgsrsv",
            "type": "String"
        },
        "virtualNetworks_CGS_vnet_name": {
            "defaultValue": "CGS-vnet",
            "type": "String"
        },
        "virtualMachines_server2019_name": {
            "defaultValue": "server2019",
            "type": "String"
        },
        "loadBalancers_scalesetlbpip_name": {
            "defaultValue": "scalesetlbpip",
            "type": "String"
        },
        "storageAccounts_xferccpdata_name": {
            "defaultValue": "xferccpdata",
            "type": "String"
        },
        "availabilitySets_cgsavailset_name": {
            "defaultValue": "cgsavailset",
            "type": "String"
        },
        "BackupVaults_ccptestbv_name": {
            "defaultValue": "ccptestbv",
            "type": "String"
        },
        "networkSecurityGroups_W19_nsg_name": {
            "defaultValue": "W19-nsg",
            "type": "String"
        },
        "networkInterfaces_vm_rhel79183_name": {
            "defaultValue": "vm-rhel79183",
            "type": "String"
        },
        "virtualNetworks_CGSTestRG_vnet_name": {
            "defaultValue": "CGSTestRG-vnet",
            "type": "String"
        },
        "networkInterfaces_server2019263_name": {
            "defaultValue": "server2019263",
            "type": "String"
        },
        "publicIPAddresses_server2019_ip_name": {
            "defaultValue": "server2019-ip",
            "type": "String"
        },
        "publicIPAddresses_vm_rhel791_ip_name": {
            "defaultValue": "vm-rhel791-ip",
            "type": "String"
        },
        "virtualMachines_vmhrhel811_init1_name": {
            "defaultValue": "vmhrhel811-init1",
            "type": "String"
        },
        "publicIPAddresses_ccplbpip_publicip_name": {
            "defaultValue": "ccplbpip-publicip",
            "type": "String"
        },
        "storageSyncServices_ccpfilesync_name": {
            "defaultValue": "ccpfilesync",
            "type": "String"
        },
        "networkInterfaces_vmhrhel811_init121_name": {
            "defaultValue": "vmhrhel811-init121",
            "type": "String"
        },
        "publicIPAddresses_vmhrhel811_init1_ip_name": {
            "defaultValue": "vmhrhel811-init1-ip",
            "type": "String"
        },
        "autoscalesettings_scaletset4autoscale_name": {
            "defaultValue": "scaletset4autoscale",
            "type": "String"
        },
        "autoscalesettings_ccpscaleset2autoscale_name": {
            "defaultValue": "ccpscaleset2autoscale",
            "type": "String"
        },
        "autoscalesettings_ccpvmscaleseautoscale_name": {
            "defaultValue": "ccpvmscaleseautoscale",
            "type": "String"
        },
        "publicIPAddresses_scalesetlbpip_publicip_name": {
            "defaultValue": "scalesetlbpip-publicip",
            "type": "String"
        },
        "autoscalesettings_ccpscaletset44autoscale_name": {
            "defaultValue": "ccpscaletset44autoscale",
            "type": "String"
        },
        "autoscalesettings_ccpvmscaleset3autoscale_name": {
            "defaultValue": "ccpvmscaleset3autoscale",
            "type": "String"
        },
        "autoscalesettings_vminitccpscaleautoscale_name": {
            "defaultValue": "vminitccpscaleautoscale",
            "type": "String"
        },
        "networkSecurityGroups_basicNsgCGS_vnet_nic01_name": {
            "defaultValue": "basicNsgCGS-vnet-nic01",
            "type": "String"
        },
        "autoscalesettings_ccpautoscalevmsetautoscale_name": {
            "defaultValue": "ccpautoscalevmsetautoscale",
            "type": "String"
        },
        "networkSecurityGroups_basicNsgCGSTestRG_vnet_nic01_name": {
            "defaultValue": "basicNsgCGSTestRG-vnet-nic01",
            "type": "String"
        },
        "virtualMachineScaleSets_ccpautoscalevmset_externalid": {
            "defaultValue": "/subscriptions/aca56408-c68a-4b77-abbd-555b94db2609/resourceGroups/CGSTestRG/providers/Microsoft.Compute/virtualMachineScaleSets/ccpautoscalevmset",
            "type": "String"
        },
        "virtualMachineScaleSets_ccpscaleset2_externalid": {
            "defaultValue": "/subscriptions/aca56408-c68a-4b77-abbd-555b94db2609/resourceGroups/CGSTestRG/providers/Microsoft.Compute/virtualMachineScaleSets/ccpscaleset2",
            "type": "String"
        },
        "virtualMachineScaleSets_ccpscaletset44_externalid": {
            "defaultValue": "/subscriptions/aca56408-c68a-4b77-abbd-555b94db2609/resourceGroups/CGSTestRG/providers/Microsoft.Compute/virtualMachineScaleSets/ccpscaletset44",
            "type": "String"
        },
        "virtualMachineScaleSets_ccpvmscalese_externalid": {
            "defaultValue": "/subscriptions/aca56408-c68a-4b77-abbd-555b94db2609/resourceGroups/CGSTestRG/providers/Microsoft.Compute/virtualMachineScaleSets/ccpvmscalese",
            "type": "String"
        },
        "virtualMachineScaleSets_ccpvmscaleset3_externalid": {
            "defaultValue": "/subscriptions/aca56408-c68a-4b77-abbd-555b94db2609/resourceGroups/CGSTestRG/providers/Microsoft.Compute/virtualMachineScaleSets/ccpvmscaleset3",
            "type": "String"
        },
        "virtualMachineScaleSets_scaletset4_externalid": {
            "defaultValue": "/subscriptions/aca56408-c68a-4b77-abbd-555b94db2609/resourceGroups/CGSTestRG/providers/Microsoft.Compute/virtualMachineScaleSets/scaletset4",
            "type": "String"
        },
        "virtualMachineScaleSets_vminitccpscale_externalid": {
            "defaultValue": "/subscriptions/aca56408-c68a-4b77-abbd-555b94db2609/resourceGroups/CGSTestRG/providers/Microsoft.Compute/virtualMachineScaleSets/vminitccpscale",
            "type": "String"
        }
    },
    "variables": {
        "cgsvertexserver": "vertex-server",
		"cgsvertexnic": "vertex-nic",
		"cgsvertexpip": "vertex-pip",
		"CGSVnet": "vertex-host",
		"CGSNSG": "CGSNSG",
        "storageAccountName": "xferccpdata"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2022-11-01",
            "name": "[parameters('availabilitySets_cgsavailset_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 2,
                "platformFaultDomainCount": 2,
                "virtualMachines": []
            }
        },
        {
            "type": "Microsoft.Compute/sshPublicKeys",
            "apiVersion": "2022-11-01",
            "name": "[parameters('sshPublicKeys_cc_key_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDezZNazX8NdyV0uCSeNB40GE0JXzhFWv77z+UhvZ2LNANgXo6WQJlGLdiEBnTIH+6stlTCS82p2+7+WD4OHr3z+4uZzFbdFqQH/vBWwm7tFTt4GX9Qb5QkOFvu8v7r7VdcOrSXFxmsIZJb+MKg+S1Ta/q9SEqHQcZY4kXxFUFcBs0nHcHep3Tj7KgeTh+XTydkhfETb222/4nKCQb073aR2C3fNuhB0eiQibQ2O+I/s8XifwtZjfpBVtQQplvLFzKO1nZNHxWffTZk5lB2TdeVZluli5nfMRcLshBmF0NYkMwYXU9wfMVAc65GSigXdhFS6lrUrdl9lf7LJfDNFLZZE+uJofMZB8+wQb2mEgVY5lTuBeU2+L3Ak+K70J4fwL+uAFvecQtHWfVtkd/4KVaJYrRkJov1L6LnVK3ICJVEHEJkj5bU8/wqLItXLyjEmv+L9f2zBgaYLatFRhpIJka6gGRiFx7RxbxWtsobbtCMALW/D7YvCKO2BcIHd9IK0uU= generated-by-azure"
            }
        },
        {
            "type": "Microsoft.DataProtection/BackupVaults",
            "apiVersion": "2023-01-01",
            "name": "[parameters('BackupVaults_ccptestbv_name')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "storageSettings": [
                    {
                        "datastoreType": "VaultStore",
                        "type": "LocallyRedundant"
                    }
                ],
                "securitySettings": {
                    "softDeleteSettings": {
                        "state": "On",
                        "retentionDurationInDays": 14
                    }
                },
                "featureSettings": {}
            }
        },
        {
            "type": "microsoft.insights/autoscalesettings",
            "apiVersion": "2022-10-01",
            "name": "[parameters('autoscalesettings_ccpautoscalevmsetautoscale_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "10",
                            "default": "1"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_ccpautoscalevmset_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 5,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_ccpautoscalevmset_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 3,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[parameters('autoscalesettings_ccpautoscalevmsetautoscale_name')]",
                "targetResourceUri": "[parameters('virtualMachineScaleSets_ccpautoscalevmset_externalid')]",
                "predictiveAutoscalePolicy": {
                    "scaleMode": "Disabled",
                    "scaleLookAheadTime": "PT14M"
                }
            }
        },
        {
            "type": "microsoft.insights/autoscalesettings",
            "apiVersion": "2022-10-01",
            "name": "[parameters('autoscalesettings_ccpscaleset2autoscale_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "4",
                            "default": "1"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_ccpscaleset2_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 75,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_ccpscaleset2_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 25,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[parameters('autoscalesettings_ccpscaleset2autoscale_name')]",
                "targetResourceUri": "[parameters('virtualMachineScaleSets_ccpscaleset2_externalid')]",
                "predictiveAutoscalePolicy": {
                    "scaleMode": "Disabled",
                    "scaleLookAheadTime": "PT14M"
                }
            }
        },
        {
            "type": "microsoft.insights/autoscalesettings",
            "apiVersion": "2022-10-01",
            "name": "[parameters('autoscalesettings_ccpscaletset44autoscale_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "4",
                            "default": "1"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_ccpscaletset44_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 75,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_ccpscaletset44_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 25,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[parameters('autoscalesettings_ccpscaletset44autoscale_name')]",
                "targetResourceUri": "[parameters('virtualMachineScaleSets_ccpscaletset44_externalid')]",
                "predictiveAutoscalePolicy": {
                    "scaleMode": "Disabled",
                    "scaleLookAheadTime": "PT14M"
                }
            }
        },
        {
            "type": "microsoft.insights/autoscalesettings",
            "apiVersion": "2022-10-01",
            "name": "[parameters('autoscalesettings_ccpvmscaleseautoscale_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "5",
                            "default": "1"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_ccpvmscalese_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 75,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_ccpvmscalese_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 25,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[parameters('autoscalesettings_ccpvmscaleseautoscale_name')]",
                "targetResourceUri": "[parameters('virtualMachineScaleSets_ccpvmscalese_externalid')]",
                "predictiveAutoscalePolicy": {
                    "scaleMode": "Disabled",
                    "scaleLookAheadTime": "PT14M"
                }
            }
        },
        {
            "type": "microsoft.insights/autoscalesettings",
            "apiVersion": "2022-10-01",
            "name": "[parameters('autoscalesettings_ccpvmscaleset3autoscale_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "4",
                            "default": "1"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_ccpvmscaleset3_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 75,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_ccpvmscaleset3_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 25,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[parameters('autoscalesettings_ccpvmscaleset3autoscale_name')]",
                "targetResourceUri": "[parameters('virtualMachineScaleSets_ccpvmscaleset3_externalid')]",
                "predictiveAutoscalePolicy": {
                    "scaleMode": "Disabled",
                    "scaleLookAheadTime": "PT14M"
                }
            }
        },
        {
            "type": "microsoft.insights/autoscalesettings",
            "apiVersion": "2022-10-01",
            "name": "[parameters('autoscalesettings_scaletset4autoscale_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "4",
                            "default": "1"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_scaletset4_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 75,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_scaletset4_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 25,
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[parameters('autoscalesettings_scaletset4autoscale_name')]",
                "targetResourceUri": "[parameters('virtualMachineScaleSets_scaletset4_externalid')]",
                "predictiveAutoscalePolicy": {
                    "scaleMode": "Disabled",
                    "scaleLookAheadTime": "PT14M"
                }
            }
        },
        {
            "type": "microsoft.insights/autoscalesettings",
            "apiVersion": "2022-10-01",
            "name": "[parameters('autoscalesettings_vminitccpscaleautoscale_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "4",
                            "default": "1"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "microsoft.compute/virtualmachinescalesets",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_vminitccpscale_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 70,
                                    "dimensions": [],
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "microsoft.compute/virtualmachinescalesets",
                                    "metricResourceUri": "[parameters('virtualMachineScaleSets_vminitccpscale_externalid')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 25,
                                    "dimensions": [],
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[parameters('autoscalesettings_vminitccpscaleautoscale_name')]",
                "targetResourceUri": "[parameters('virtualMachineScaleSets_vminitccpscale_externalid')]",
                "notifications": [],
                "predictiveAutoscalePolicy": {
                    "scaleMode": "Disabled"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-09-01",
            "name": "[parameters('networkSecurityGroups_basicNsgCGS_vnet_nic01_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-09-01",
            "name": "[parameters('publicIPAddresses_ccplbpip_publicip_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "ipAddress": "20.81.112.210",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 15,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-09-01",
            "name": "[parameters('publicIPAddresses_scalesetlbpip_publicip_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "ipAddress": "20.246.157.22",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 15,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-09-01",
            "name": "[parameters('publicIPAddresses_server2019_ip_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "168.62.171.198",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-09-01",
            "name": "[parameters('publicIPAddresses_vmhrhel811_init1_ip_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "4.227.242.13",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-09-01",
            "name": "[variables('cgsvertexpip')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "172.174.21.195",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2023-02-01",
            "name": "[parameters('vaults_cgsrsv_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {
                "securitySettings": {},
                "publicNetworkAccess": "Enabled",
                "restoreSettings": {
                    "crossSubscriptionRestoreSettings": {
                        "crossSubscriptionRestoreState": "Enabled"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "blobstorage": "ccp_data",
                "blobstorage1": "xfer_data"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": true,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.StorageSync/storageSyncServices",
            "apiVersion": "2022-06-01",
            "name": "[parameters('storageSyncServices_ccpfilesync_name')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "fliesync": "ccpdata"
            },
            "properties": {
                "incomingTrafficPolicy": "AllowAllTraffic"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-11-01",
            "name": "[parameters('virtualMachines_server2019_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [  /* storage account and network interface must be deployed first */
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_server2019263_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-datacenter-gensecond",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_server2019_name'), '_OsDisk_1_1c4c40502d684f07a6d044e426ed4e6c')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_server2019_name')]",
                    "adminUsername": "cgsadmin",
                    "adminPassword": "PasswordPassword1!",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        },
                        "enableVMAgentPlatformUpdates": false
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "securityProfile": {
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    },
                    "securityType": "TrustedLaunch"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_server2019263_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-11-01",
            "name": "[parameters('virtualMachines_vmhrhel811_init1_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [  /* storage account and network interface must be deployed first */
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmhrhel811_init121_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "RedHat",
                        "offer": "RHEL",
                        "sku": "81-ci-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_vmhrhel811_init1_name'), '_OsDisk_1_3fe74893b5f44add8900318fe218788e')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 64
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_vmhrhel811_init1_name')]",
                    "adminUsername": "cgsadmin",
                    "adminPassword": "PasswordPassword1!",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        },
                        "enableVMAgentPlatformUpdates": false
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmhrhel811_init121_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-11-01",
            "name": "[variables('cgsvertexserver')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ /* storage account and network interface must be deployed first */
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('cgsvertexnic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "RedHat",
                        "offer": "RHEL",
                        "sku": "81-ci-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(variables('cgsvertexserver'), '_OsDisk_1_3fe74893b5f44add8900318fe218788e')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 64
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[variables('cgsvertexserver')]",
                    "adminUsername": "cgsadmin",
                    "adminPassword": "PasswordPassword1!",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        },
                        "enableVMAgentPlatformUpdates": false
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('cgsvertexnic'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('virtualMachines_server2019_name'), '/AzureNetworkWatcherExtension')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_server2019_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
            }
        },
        
        {
            "type": "Microsoft.DataProtection/BackupVaults/backupPolicies",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('BackupVaults_ccptestbv_name'), '/ccptest-bv-bu')]",
            "dependsOn": [
                "[resourceId('Microsoft.DataProtection/BackupVaults', parameters('BackupVaults_ccptestbv_name'))]"
            ],
            "properties": {
                "policyRules": [
                    {
                        "lifecycles": [
                            {
                                "deleteAfter": {
                                    "objectType": "AbsoluteDeleteOption",
                                    "duration": "P1W"
                                },
                                "targetDataStoreCopySettings": [],
                                "sourceDataStore": {
                                    "dataStoreType": "OperationalStore",
                                    "objectType": "DataStoreInfoBase"
                                }
                            }
                        ],
                        "isDefault": true,
                        "name": "Default",
                        "objectType": "AzureRetentionRule"
                    },
                    {
                        "lifecycles": [
                            {
                                "deleteAfter": {
                                    "objectType": "AbsoluteDeleteOption",
                                    "duration": "P7D"
                                },
                                "targetDataStoreCopySettings": [],
                                "sourceDataStore": {
                                    "dataStoreType": "VaultStore",
                                    "objectType": "DataStoreInfoBase"
                                }
                            }
                        ],
                        "isDefault": true,
                        "name": "Default",
                        "objectType": "AzureRetentionRule"
                    },
                    {
                        "backupParameters": {
                            "backupType": "Discrete",
                            "objectType": "AzureBackupParams"
                        },
                        "trigger": {
                            "schedule": {
                                "repeatingTimeIntervals": [
                                    "R/2023-04-03T11:30:00+00:00/P1D"
                                ],
                                "timeZone": "UTC"
                            },
                            "taggingCriteria": [
                                {
                                    "tagInfo": {
                                        "tagName": "Default"
                                    },
                                    "taggingPriority": 99,
                                    "isDefault": true
                                }
                            ],
                            "objectType": "ScheduleBasedTriggerContext"
                        },
                        "dataStore": {
                            "dataStoreType": "VaultStore",
                            "objectType": "DataStoreInfoBase"
                        },
                        "name": "BackupDaily",
                        "objectType": "AzureBackupRule"
                    }
                ],
                "datasourceTypes": [
                    "Microsoft.Storage/storageAccounts/blobServices"
                ],
                "objectType": "BackupPolicy"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('loadBalancers_ccplbpip_name'), '/bepool')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_ccplbpip_name'))]"
            ],
            "properties": {
                "loadBalancerBackendAddresses": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('loadBalancers_scalesetlbpip_name'), '/bepool')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_scalesetlbpip_name'))]"
            ],
            "properties": {
                "loadBalancerBackendAddresses": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-09-01",
            "name": "[parameters('networkSecurityGroups_basicNsgCGSTestRG_vnet_nic01_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_basicNsgCGSTestRG_vnet_nic01_name'), 'Tcp')]"
            ],
            "properties": {
                "securityRules": [
                    {
                        "name": "Tcp",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_basicNsgCGSTestRG_vnet_nic01_name'), 'Tcp')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('networkSecurityGroups_W19_nsg_name'), '/AllowAnyCustom8080Inbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_W19_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 330,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('networkSecurityGroups_W19_nsg_name'), '/AllowAnyCustom8443Inbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_W19_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 340,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('networkSecurityGroups_W19_nsg_name'), '/AllowMyIpAddressSSHInbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_W19_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "108.52.218.75",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 320,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('networkSecurityGroups_W19_nsg_name'), '/HTTPS')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_W19_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('networkSecurityGroups_W19_nsg_name'), '/RDP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_W19_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "108.52.218.75",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 310,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('networkSecurityGroups_basicNsgCGSTestRG_vnet_nic01_name'), '/Tcp')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_basicNsgCGSTestRG_vnet_nic01_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-09-01",
            "name": "[parameters('virtualNetworks_CGSTestRG_vnet_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGSTestRG_vnet_name'), 'default')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGSTestRG_vnet_name'), 'default')]",
                        "properties": {
                            "addressPrefix": "10.1.0.0/20",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('virtualNetworks_CGS_vnet_name'), '/172.16.16.0')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_CGS_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "172.16.16.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('virtualNetworks_CGS_vnet_name'), '/172.16.18.0')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_CGS_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "172.16.18.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('virtualNetworks_CGS_vnet_name'), '/172.16.20.0')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_CGS_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "172.16.20.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('virtualNetworks_CGSTestRG_vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_CGSTestRG_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.0.0/20",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('virtualNetworks_CGS_vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_CGS_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('vaults_cgsrsv_name'), '/DailyPolicy-lg187xid')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_cgsrsv_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureStorage",
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2023-04-03T19:30:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2023-04-03T19:30:00Z"
                        ],
                        "retentionDuration": {
                            "count": 60,
                            "durationType": "Days"
                        }
                    },
                    "monthlySchedule": {
                        "retentionScheduleFormatType": "Weekly",
                        "retentionScheduleWeekly": {
                            "daysOfTheWeek": [
                                "Sunday"
                            ],
                            "weeksOfTheMonth": [
                                "First"
                            ]
                        },
                        "retentionTimes": [
                            "2023-04-03T19:30:00Z"
                        ],
                        "retentionDuration": {
                            "count": 60,
                            "durationType": "Months"
                        }
                    }
                },
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('vaults_cgsrsv_name'), '/DefaultPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_cgsrsv_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2023-04-04T03:00:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2023-04-04T03:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('vaults_cgsrsv_name'), '/EnhancedPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_cgsrsv_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "policyType": "V2",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicyV2",
                    "scheduleRunFrequency": "Hourly",
                    "hourlySchedule": {
                        "interval": 4,
                        "scheduleWindowStartTime": "2023-04-04T08:00:00Z",
                        "scheduleWindowDuration": 12
                    }
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2023-04-04T08:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('vaults_cgsrsv_name'), '/HourlyLogBackup')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_cgsrsv_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureWorkload",
                "workLoadType": "SQLDataBase",
                "settings": {
                    "timeZone": "UTC",
                    "issqlcompression": false,
                    "isCompression": false
                },
                "subProtectionPolicy": [
                    {
                        "policyType": "Full",
                        "schedulePolicy": {
                            "schedulePolicyType": "SimpleSchedulePolicy",
                            "scheduleRunFrequency": "Daily",
                            "scheduleRunTimes": [
                                "2023-04-04T03:00:00Z"
                            ],
                            "scheduleWeeklyFrequency": 0
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "LongTermRetentionPolicy",
                            "dailySchedule": {
                                "retentionTimes": [
                                    "2023-04-04T03:00:00Z"
                                ],
                                "retentionDuration": {
                                    "count": 30,
                                    "durationType": "Days"
                                }
                            }
                        }
                    },
                    {
                        "policyType": "Log",
                        "schedulePolicy": {
                            "schedulePolicyType": "LogSchedulePolicy",
                            "scheduleFrequencyInMins": 60
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "SimpleRetentionPolicy",
                            "retentionDuration": {
                                "count": 30,
                                "durationType": "Days"
                            }
                        }
                    }
                ],
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationAlertSettings",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('vaults_cgsrsv_name'), '/defaultAlertSetting')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_cgsrsv_name'))]"
            ],
            "properties": {
                "sendToOwners": "DoNotSend",
                "customEmailAddresses": []
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationVaultSettings",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('vaults_cgsrsv_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_cgsrsv_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "changeFeed": {
                    "enabled": true
                },
                "restorePolicy": {
                    "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                },
                "isVersioningEnabled": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 14
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.StorageSync/storageSyncServices/syncGroups",
            "apiVersion": "2022-06-01",
            "name": "[concat(parameters('storageSyncServices_ccpfilesync_name'), '/ccpsync')]",
            "dependsOn": [
                "[resourceId('Microsoft.StorageSync/storageSyncServices', parameters('storageSyncServices_ccpfilesync_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('loadBalancers_scalesetlbpip_name'), '/', parameters('loadBalancers_scalesetlbpip_name'), '-natRule01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_scalesetlbpip_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_scalesetlbpip_name'), 'bepool')]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_scalesetlbpip_name')), '/frontendIPConfigurations/scalesetlbpip-frontendconfig01')]"
                },
                "frontendPort": 0,
                "backendPort": 22,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false,
                "frontendPortRangeStart": 50000,
                "frontendPortRangeEnd": 53599,
                "backendAddressPool": {
                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_scalesetlbpip_name'), 'bepool')]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/blobstorageccp')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/ccpshare')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/LinuxSyslogVer2v0')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/SchemasTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/WADDiagnosticInfrastructureLogsTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/WADMetricsPT1HP10DV2S20230330')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/WADMetricsPT1HP10DV2S20230409')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/WADMetricsPT1MP10DV2S20230330')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/WADMetricsPT1MP10DV2S20230409')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/WADPerformanceCountersTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/WADWindowsEventLogsTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2022-09-01",
            "name": "[parameters('loadBalancers_ccplbpip_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_ccplbpip_name'), 'bepool')]",
                "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_ccplbpip_name'), concat(parameters('loadBalancers_ccplbpip_name'), '-natRule01'))]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[concat(parameters('loadBalancers_ccplbpip_name'), '-frontendconfig01')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_ccplbpip_name')), concat('/frontendIPConfigurations/', parameters('loadBalancers_ccplbpip_name'), '-frontendconfig01'))]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[parameters('publicIPAddresses_ccplbpip_publicip_externalid')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "bepool",
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_ccplbpip_name'), 'bepool')]",
                        "properties": {
                            "loadBalancerBackendAddresses": []
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[concat(parameters('loadBalancers_ccplbpip_name'), '-lbrule01')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_ccplbpip_name')), concat('/loadBalancingRules/', parameters('loadBalancers_ccplbpip_name'), '-lbrule01'))]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_ccplbpip_name')), concat('/frontendIPConfigurations/', parameters('loadBalancers_ccplbpip_name'), '-frontendconfig01'))]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 15,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_ccplbpip_name'), 'bepool')]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_ccplbpip_name'), 'bepool')]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_ccplbpip_name')), concat('/probes/', parameters('loadBalancers_ccplbpip_name'), '-probe01'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[concat(parameters('loadBalancers_ccplbpip_name'), '-probe01')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_ccplbpip_name')), concat('/probes/', parameters('loadBalancers_ccplbpip_name'), '-probe01'))]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2,
                            "probeThreshold": 1
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[concat(parameters('loadBalancers_ccplbpip_name'), '-natRule01')]",
                        "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_ccplbpip_name'), concat(parameters('loadBalancers_ccplbpip_name'), '-natRule01'))]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_ccplbpip_name')), concat('/frontendIPConfigurations/', parameters('loadBalancers_ccplbpip_name'), '-frontendconfig01'))]"
                            },
                            "frontendPort": 0,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "frontendPortRangeStart": 50000,
                            "frontendPortRangeEnd": 53599,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_ccplbpip_name'), 'bepool')]"
                            }
                        }
                    }
                ],
                "outboundRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('loadBalancers_ccplbpip_name'), '/', parameters('loadBalancers_ccplbpip_name'), '-natRule01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_ccplbpip_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_ccplbpip_name'), 'bepool')]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_ccplbpip_name')), '/frontendIPConfigurations/ccplbpip-frontendconfig01')]"
                },
                "frontendPort": 0,
                "backendPort": 22,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false,
                "frontendPortRangeStart": 50000,
                "frontendPortRangeEnd": 53599,
                "backendAddressPool": {
                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_ccplbpip_name'), 'bepool')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2022-09-01",
            "name": "[parameters('loadBalancers_scalesetlbpip_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_scalesetlbpip_publicip_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_scalesetlbpip_name'), 'bepool')]",
                "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_scalesetlbpip_name'), concat(parameters('loadBalancers_scalesetlbpip_name'), '-natRule01'))]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[concat(parameters('loadBalancers_scalesetlbpip_name'), '-frontendconfig01')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_scalesetlbpip_name')), concat('/frontendIPConfigurations/', parameters('loadBalancers_scalesetlbpip_name'), '-frontendconfig01'))]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_scalesetlbpip_publicip_name'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "bepool",
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_scalesetlbpip_name'), 'bepool')]",
                        "properties": {
                            "loadBalancerBackendAddresses": []
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[concat(parameters('loadBalancers_scalesetlbpip_name'), '-lbrule01')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_scalesetlbpip_name')), concat('/loadBalancingRules/', parameters('loadBalancers_scalesetlbpip_name'), '-lbrule01'))]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_scalesetlbpip_name')), concat('/frontendIPConfigurations/', parameters('loadBalancers_scalesetlbpip_name'), '-frontendconfig01'))]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 15,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_scalesetlbpip_name'), 'bepool')]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_scalesetlbpip_name'), 'bepool')]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_scalesetlbpip_name')), concat('/probes/', parameters('loadBalancers_scalesetlbpip_name'), '-probe01'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[concat(parameters('loadBalancers_scalesetlbpip_name'), '-probe01')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_scalesetlbpip_name')), concat('/probes/', parameters('loadBalancers_scalesetlbpip_name'), '-probe01'))]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2,
                            "probeThreshold": 1
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[concat(parameters('loadBalancers_scalesetlbpip_name'), '-natRule01')]",
                        "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_scalesetlbpip_name'), concat(parameters('loadBalancers_scalesetlbpip_name'), '-natRule01'))]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_scalesetlbpip_name')), concat('/frontendIPConfigurations/', parameters('loadBalancers_scalesetlbpip_name'), '-frontendconfig01'))]"
                            },
                            "frontendPort": 0,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "frontendPortRangeStart": 50000,
                            "frontendPortRangeEnd": 53599,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_scalesetlbpip_name'), 'bepool')]"
                            }
                        }
                    }
                ],
                "outboundRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-09-01",
            "name": "[parameters('networkInterfaces_server2019263_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_server2019_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.16.0')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_W19_nsg_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_server2019263_name')), '/ipConfigurations/ipconfig1')]",
                        "etag": "W/\"40b2ef9f-04b4-4286-bef0-c432848bca7f\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "172.16.16.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "name": "server2019-ip",
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_server2019_ip_name'))]",
                                "properties": {
                                    "provisioningState": "Succeeded",
                                    "resourceGuid": "3e9686a8-ca6b-48d7-ab59-58d9d4512e66",
                                    "publicIPAddressVersion": "IPv4",
                                    "publicIPAllocationMethod": "Dynamic",
                                    "idleTimeoutInMinutes": 4,
                                    "ipTags": [],
                                    "ipConfiguration": {
                                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_server2019263_name')), '/ipConfigurations/ipconfig1')]"
                                    },
                                    "deleteOption": "Detach"
                                },
                                "type": "Microsoft.Network/publicIPAddresses",
                                "sku": {
                                    "name": "Basic",
                                    "tier": "Regional"
                                }
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.16.0')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_W19_nsg_name'))]"
                },
                "nicType": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-09-01",
            "name": "[parameters('networkInterfaces_vmhrhel811_init121_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vmhrhel811_init1_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.18.0')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_W19_nsg_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmhrhel811_init121_name')), '/ipConfigurations/ipconfig1')]",
                        "etag": "W/\"c03d5216-52f3-441c-ba21-5e8a9350a80f\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "172.16.18.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "name": "vmhrhel811-init1-ip",
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vmhrhel811_init1_ip_name'))]",
                                "properties": {
                                    "provisioningState": "Succeeded",
                                    "resourceGuid": "4d5cbd2c-454f-4f0f-823d-68b59a94e793",
                                    "publicIPAddressVersion": "IPv4",
                                    "publicIPAllocationMethod": "Dynamic",
                                    "idleTimeoutInMinutes": 4,
                                    "ipTags": [],
                                    "ipConfiguration": {
                                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmhrhel811_init121_name')), '/ipConfigurations/ipconfig1')]"
                                    },
                                    "deleteOption": "Detach"
                                },
                                "type": "Microsoft.Network/publicIPAddresses",
                                "sku": {
                                    "name": "Basic",
                                    "tier": "Regional"
                                }
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.18.0')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_W19_nsg_name'))]"
                },
                "nicType": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-09-01",
            "name": "[variables('cgsvertexnic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('cgsvertexpip'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.18.0')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_W19_nsg_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', variables('cgsvertexnic')), '/ipConfigurations/ipconfig1')]",
                        "etag": "W/\"f6dc363a-f1f8-47de-bd24-58a33a38089e\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "172.16.16.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "name": "vm-rhel791-ip",
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('cgsvertexpip'))]",
                                "properties": {
                                    "provisioningState": "Succeeded",
                                    "resourceGuid": "80df78c9-b0e4-4bef-8934-5b32fd0f7c72",
                                    "publicIPAddressVersion": "IPv4",
                                    "publicIPAllocationMethod": "Dynamic",
                                    "idleTimeoutInMinutes": 4,
                                    "ipTags": [],
                                    "ipConfiguration": {
                                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', variables('cgsvertexnic')), '/ipConfigurations/ipconfig1')]"
                                    },
                                    "deleteOption": "Delete"
                                },
                                "type": "Microsoft.Network/publicIPAddresses",
                                "sku": {
                                    "name": "Basic",
                                    "tier": "Regional"
                                }
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.16.0')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_W19_nsg_name'))]"
                },
                "nicType": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-09-01",
            "name": "[parameters('virtualNetworks_CGS_vnet_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), 'default')]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.16.0')]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.18.0')]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.20.0')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16",
                        "172.16.16.0/20"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), 'default')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "172.16.16.0",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.16.0')]",
                        "properties": {
                            "addressPrefix": "172.16.16.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "172.16.18.0",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.18.0')]",
                        "properties": {
                            "addressPrefix": "172.16.18.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "172.16.20.0",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_CGS_vnet_name'), '172.16.20.0')]",
                        "properties": {
                            "addressPrefix": "172.16.20.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-09-01",
            "name": "[parameters('networkSecurityGroups_W19_nsg_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_W19_nsg_name'), 'HTTPS')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_W19_nsg_name'), 'RDP')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_W19_nsg_name'), 'AllowMyIpAddressSSHInbound')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_W19_nsg_name'), 'AllowAnyCustom8080Inbound')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_W19_nsg_name'), 'AllowAnyCustom8443Inbound')]"
            ],
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_W19_nsg_name'), 'HTTPS')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "RDP",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_W19_nsg_name'), 'RDP')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "108.52.218.75",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowMyIpAddressSSHInbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_W19_nsg_name'), 'AllowMyIpAddressSSHInbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "108.52.218.75",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAnyCustom8080Inbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_W19_nsg_name'), 'AllowAnyCustom8080Inbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 330,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAnyCustom8443Inbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_W19_nsg_name'), 'AllowAnyCustom8443Inbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 340,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        }
    ]
}
